<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column12.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column13.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column14.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column19.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column18.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column17.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column16.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column15.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RF7MAAAAAElFTkSuQmCC
</value>
  </data>
</root>